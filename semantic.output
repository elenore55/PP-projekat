Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 function: _TYPE _ID _LPAREN parameter _RPAREN body

    5 parameter: %empty
    6          | _TYPE _ID

    7 body: _LBRACKET variable_list statement_list _RBRACKET

    8 variable_list: %empty
    9              | variable_list variable

   10 variable: _TYPE _ID _SEMICOLON

   11 statement_list: %empty
   12               | statement_list statement

   13 statement: compound_statement
   14          | assignment_statement
   15          | if_statement
   16          | return_statement

   17 compound_statement: _LBRACKET statement_list _RBRACKET

   18 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   19 num_exp: exp
   20        | num_exp _AROP exp

   21 exp: literal
   22    | _ID
   23    | function_call
   24    | _LPAREN num_exp _RPAREN

   25 literal: _INT_NUMBER
   26        | _UINT_NUMBER

   27 function_call: _ID _LPAREN argument _RPAREN

   28 argument: %empty
   29         | num_exp

   30 if_statement: if_part
   31             | if_part _ELSE statement

   32 if_part: _IF _LPAREN rel_exp _RPAREN statement

   33 rel_exp: num_exp _RELOP num_exp

   34 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 4 6 10
_IF (259) 32
_ELSE (260) 31
_RETURN (261) 34
_ID (262) 4 6 10 18 22 27
_INT_NUMBER (263) 25
_UINT_NUMBER (264) 26
_LPAREN (265) 4 24 27 32
_RPAREN (266) 4 24 27 32
_LBRACKET (267) 7 17
_RBRACKET (268) 7 17
_ASSIGN (269) 18
_SEMICOLON (270) 10 18 34
_AROP (271) 20
_RELOP (272) 33
ONLY_IF (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
function_list (21)
    on left: 2 3, on right: 1 3
function (22)
    on left: 4, on right: 2 3
parameter (23)
    on left: 5 6, on right: 4
body (24)
    on left: 7, on right: 4
variable_list (25)
    on left: 8 9, on right: 7 9
variable (26)
    on left: 10, on right: 9
statement_list (27)
    on left: 11 12, on right: 7 12 17
statement (28)
    on left: 13 14 15 16, on right: 12 31 32
compound_statement (29)
    on left: 17, on right: 13
assignment_statement (30)
    on left: 18, on right: 14
num_exp (31)
    on left: 19 20, on right: 18 20 24 29 33 34
exp (32)
    on left: 21 22 23 24, on right: 19 20
literal (33)
    on left: 25 26, on right: 21
function_call (34)
    on left: 27, on right: 23
argument (35)
    on left: 28 29, on right: 27
if_statement (36)
    on left: 30 31, on right: 15
if_part (37)
    on left: 32, on right: 30 31
rel_exp (38)
    on left: 33, on right: 32
return_statement (39)
    on left: 34, on right: 16


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    4 function: _TYPE . _ID _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    4 function: _TYPE _ID . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    4 function: _TYPE _ID _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 9

    $default  reduce using rule 5 (parameter)

    parameter  go to state 10


State 9

    6 parameter: _TYPE . _ID

    _ID  shift, and go to state 11


State 10

    4 function: _TYPE _ID _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 12


State 11

    6 parameter: _TYPE _ID .

    $default  reduce using rule 6 (parameter)


State 12

    4 function: _TYPE _ID _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 13

    body  go to state 14


State 13

    7 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 8 (variable_list)

    variable_list  go to state 15


State 14

    4 function: _TYPE _ID _LPAREN parameter _RPAREN body .

    $default  reduce using rule 4 (function)


State 15

    7 body: _LBRACKET variable_list . statement_list _RBRACKET
    9 variable_list: variable_list . variable

    _TYPE  shift, and go to state 16

    $default  reduce using rule 11 (statement_list)

    variable        go to state 17
    statement_list  go to state 18


State 16

   10 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 19


State 17

    9 variable_list: variable_list variable .

    $default  reduce using rule 9 (variable_list)


State 18

    7 body: _LBRACKET variable_list statement_list . _RBRACKET
   12 statement_list: statement_list . statement

    _IF        shift, and go to state 20
    _RETURN    shift, and go to state 21
    _ID        shift, and go to state 22
    _LBRACKET  shift, and go to state 23
    _RBRACKET  shift, and go to state 24

    statement             go to state 25
    compound_statement    go to state 26
    assignment_statement  go to state 27
    if_statement          go to state 28
    if_part               go to state 29
    return_statement      go to state 30


State 19

   10 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 31


State 20

   32 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 32


State 21

   34 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    num_exp        go to state 37
    exp            go to state 38
    literal        go to state 39
    function_call  go to state 40


State 22

   18 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 41


State 23

   17 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 42


State 24

    7 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 7 (body)


State 25

   12 statement_list: statement_list statement .

    $default  reduce using rule 12 (statement_list)


State 26

   13 statement: compound_statement .

    $default  reduce using rule 13 (statement)


State 27

   14 statement: assignment_statement .

    $default  reduce using rule 14 (statement)


State 28

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 29

   30 if_statement: if_part .
   31             | if_part . _ELSE statement

    _ELSE  shift, and go to state 43

    $default  reduce using rule 30 (if_statement)


State 30

   16 statement: return_statement .

    $default  reduce using rule 16 (statement)


State 31

   10 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 10 (variable)


State 32

   32 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    num_exp        go to state 44
    exp            go to state 38
    literal        go to state 39
    function_call  go to state 40
    rel_exp        go to state 45


State 33

   22 exp: _ID .
   27 function_call: _ID . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 46

    $default  reduce using rule 22 (exp)


State 34

   25 literal: _INT_NUMBER .

    $default  reduce using rule 25 (literal)


State 35

   26 literal: _UINT_NUMBER .

    $default  reduce using rule 26 (literal)


State 36

   24 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    num_exp        go to state 47
    exp            go to state 38
    literal        go to state 39
    function_call  go to state 40


State 37

   20 num_exp: num_exp . _AROP exp
   34 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 48
    _AROP       shift, and go to state 49


State 38

   19 num_exp: exp .

    $default  reduce using rule 19 (num_exp)


State 39

   21 exp: literal .

    $default  reduce using rule 21 (exp)


State 40

   23 exp: function_call .

    $default  reduce using rule 23 (exp)


State 41

   18 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    num_exp        go to state 50
    exp            go to state 38
    literal        go to state 39
    function_call  go to state 40


State 42

   12 statement_list: statement_list . statement
   17 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 20
    _RETURN    shift, and go to state 21
    _ID        shift, and go to state 22
    _LBRACKET  shift, and go to state 23
    _RBRACKET  shift, and go to state 51

    statement             go to state 25
    compound_statement    go to state 26
    assignment_statement  go to state 27
    if_statement          go to state 28
    if_part               go to state 29
    return_statement      go to state 30


State 43

   31 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 20
    _RETURN    shift, and go to state 21
    _ID        shift, and go to state 22
    _LBRACKET  shift, and go to state 23

    statement             go to state 52
    compound_statement    go to state 26
    assignment_statement  go to state 27
    if_statement          go to state 28
    if_part               go to state 29
    return_statement      go to state 30


State 44

   20 num_exp: num_exp . _AROP exp
   33 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 49
    _RELOP  shift, and go to state 53


State 45

   32 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 54


State 46

   27 function_call: _ID _LPAREN . argument _RPAREN

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    $default  reduce using rule 28 (argument)

    num_exp        go to state 55
    exp            go to state 38
    literal        go to state 39
    function_call  go to state 40
    argument       go to state 56


State 47

   20 num_exp: num_exp . _AROP exp
   24 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 57
    _AROP    shift, and go to state 49


State 48

   34 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 34 (return_statement)


State 49

   20 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    exp            go to state 58
    literal        go to state 39
    function_call  go to state 40


State 50

   18 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   20 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 59
    _AROP       shift, and go to state 49


State 51

   17 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 17 (compound_statement)


State 52

   31 if_statement: if_part _ELSE statement .

    $default  reduce using rule 31 (if_statement)


State 53

   33 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 33
    _INT_NUMBER   shift, and go to state 34
    _UINT_NUMBER  shift, and go to state 35
    _LPAREN       shift, and go to state 36

    num_exp        go to state 60
    exp            go to state 38
    literal        go to state 39
    function_call  go to state 40


State 54

   32 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 20
    _RETURN    shift, and go to state 21
    _ID        shift, and go to state 22
    _LBRACKET  shift, and go to state 23

    statement             go to state 61
    compound_statement    go to state 26
    assignment_statement  go to state 27
    if_statement          go to state 28
    if_part               go to state 29
    return_statement      go to state 30


State 55

   20 num_exp: num_exp . _AROP exp
   29 argument: num_exp .

    _AROP  shift, and go to state 49

    $default  reduce using rule 29 (argument)


State 56

   27 function_call: _ID _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 62


State 57

   24 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 24 (exp)


State 58

   20 num_exp: num_exp _AROP exp .

    $default  reduce using rule 20 (num_exp)


State 59

   18 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 18 (assignment_statement)


State 60

   20 num_exp: num_exp . _AROP exp
   33 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 49

    $default  reduce using rule 33 (rel_exp)


State 61

   32 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 32 (if_part)


State 62

   27 function_call: _ID _LPAREN argument _RPAREN .

    $default  reduce using rule 27 (function_call)
